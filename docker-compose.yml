version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: talent_form
      POSTGRES_USER: talent_user
      POSTGRES_PASSWORD: talent_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  keycloak:
    image: quay.io/keycloak/keycloak:22.0.1
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/talent_form
      KC_DB_USERNAME: talent_user
      KC_DB_PASSWORD: talent_pass
      # SMTP-настройки для MailDev
      KC_HOSTNAME: localhost
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
    command:
      - start-dev
      - --import-realm
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm.json
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - maildev

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://talent_user:talent_pass@postgres:5432/talent_form
      KEYCLOAK_URL: http://keycloak:8080
      PORT: 3000
      # Настройки для MailDev (SMTP)
      SMTP_HOST: maildev
      SMTP_PORT: 1025
      SMTP_SECURE: "false"
      EMAIL_FROM: no-reply@example.com
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - keycloak

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: http://localhost:3000
      VITE_KEYCLOAK_URL: http://localhost:8080
      VITE_KEYCLOAK_REALM: talent-realm
      VITE_KEYCLOAK_CLIENT_ID: talent-client
    depends_on:
      - backend

  maildev:
    image: maildev/maildev
    ports:
      - "1025:1025"  # SMTP-порт для отправки писем
      - "1080:1080"  # Веб-интерфейс для просмотра писем
    environment:
      MAILDEV_INCOMING_USER: maildev
      MAILDEV_INCOMING_PASS: maildev
    restart: unless-stopped

volumes:
  postgres_data: